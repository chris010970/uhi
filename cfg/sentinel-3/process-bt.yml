request:
    evalscript: |
                //VERSION=3 
                function setup() {
                    return {
                        input: [{
                            datasource: "s3_olci",
                            bands: [
                                "B08", 
                                "B06", 
                                "B04",
                                "B17",
                                "QUALITY_FLAGS"
                            ],
                            units: [ "REFLECTANCE", "REFLECTANCE", "REFLECTANCE", "REFLECTANCE", "DN" ]
                        },                        
                        {
                            datasource: "s3_slstr",
                            bands: [
                                "S7", 
                                "S8", 
                                "S9", 
                                "dataMask"
                            ]
                        } ],
                        output: [
                        {
                            id: "rgb",
                            bands: 3,
                            sampleType: "AUTO"
                        },                                                
                        {
                            id: "b17",
                            bands: 1,
                            sampleType: "FLOAT32"
                        },                        
                        {
                            id: "bt",
                            bands: 3,
                            sampleType: "UINT16"
                        },
                        {
                            id: "data_mask",
                            bands: 8,
                            sampleType: "UINT8"
                        } ]
                    }
                }                 
                function evaluatePixel(samples) {                
                                
                    var olci = samples.s3_olci[0]
                    var slstr = samples.s3_slstr[0]
                    
                    var cloudLandMask =  slstr.dataMask * 
                                    decodeS3OLCIQualityFlags(olci.QUALITY_FLAGS).land *
                                    ( 1 - decodeS3OLCIQualityFlags(olci.QUALITY_FLAGS).bright )
                                                                            
                    return {
                        rgb: [ olci.B08 * 2.5, olci.B06 * 2.5, olci.B04 * 2.5 ], 
                        b17: [ olci.B17 ], 
                        bt: [ slstr.S7, slstr.S8, slstr.S9 ], 
                        data_mask: [ olci.dataMask, slstr.dataMask, cloudLandMask, decodeS3OLCIQualityFlags(olci.QUALITY_FLAGS).land, decodeS3OLCIQualityFlags(olci.QUALITY_FLAGS).coastline, decodeS3OLCIQualityFlags(olci.QUALITY_FLAGS).bright, decodeS3OLCIQualityFlags(olci.QUALITY_FLAGS).invalid, decodeS3OLCIQualityFlags(olci.QUALITY_FLAGS).saturatedB17 ],                        
                    }
                }
    inputs:
        - collection: SENTINEL3_OLCI
          id: s3_olci
          mosaic:
            order: leastRecent
          options:
            processing:
                upsampling: BICUBIC 
                downsampling: BILINEAR
        - collection: SENTINEL3_SLSTR
          id: s3_slstr
          mosaic:
            order: leastRecent
          options:
            processing:
                upsampling: BICUBIC 
                downsampling: BILINEAR
responses:
    rgb: TIFF
    b17: TIFF
    bt: TIFF
    data_mask: TIFF
